{
    "info":  {
                 "_postman_id":  "f44b7139-8ab8-4537-9ade-3dfb4942c4f4",
                 "name":  "assignment6",
                 "schema":  "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
                 "_exporter_id":  "9037348"
             },
    "item":  [
                 {
                     "name":  "1 user login (10 pts)",
                     "item":  [
                                  {
                                      "name":  "1. admin1 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json()\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"admin1_jwt\", respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"admin1_sub\", get_sub(respJSON[\"token\"]))\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_login\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{admin1_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. instructor1 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"instructor1_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"instructor1_sub\", get_sub(respJSON[\"token\"]))\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 2 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{instructor1_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. instructor2 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json()\r",
                                                                                    "pm.environment.set(\"instructor2_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"instructor2_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 3 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{instructor2_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. student1 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student1_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student1_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 4 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student1_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. student2 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student2_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student2_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 5 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student2_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "6. student3 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student3_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student3_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 6 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student3_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "7. student4 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student4_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student4_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 7 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student4_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "8. student5 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student5_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student5_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 8 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student5_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "9. student6 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.environment.set(\"student6_jwt\",  respJSON[\"token\"]);\r",
                                                                                    "pm.environment.set(\"student6_sub\", get_sub(respJSON[\"token\"]));\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    pm.expect(respJSON).to.have.property(\"token\");           \r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 9 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student6_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "10. invalid body 400 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(400);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"The request body is invalid\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 10 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027******* User login Tests current points = \u0027 + points_login);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\": \"{{student6_username}}\",\r\n\t\"passwordd\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "11. invalid creds 401 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Unauthorized\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* User login Test 11 points = \u0027 + points);\r",
                                                                                    "let points_login = pm.environment.get(\u0027points_login\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027User login Tests total points = \u0027 + points_login);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_login\", points_login);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{ \r\n\t\"username\":  \"{{invalid_username}}\",\r\n\t\"password\": \"{{password}}\"\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/login",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "login"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "2 all users (10 pts)",
                     "item":  [
                                  {
                                      "name":  "1. all users 200 (9 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.test(\"9 users(0.75 pts)\", function(){\r",
                                                                                    "    pm.expect(respJSON.length).to.equal(9);\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "pm.test(\"Each has 3 properties (2 pts)\", function(){\r",
                                                                                    "    pm.expect(respJSON.filter(x =\u003e Object.keys(x).length === 3).length).to.equal(9);\r",
                                                                                    "    pm.expect(respJSON.filter(x =\u003e Object.keys(x).includes(\u0027id\u0027)).length).to.equal(9);\r",
                                                                                    "    pm.expect(respJSON.filter(x =\u003e Object.keys(x).includes(\u0027role\u0027)).length).to.equal(9);\r",
                                                                                    "    pm.expect(respJSON.filter(x =\u003e Object.keys(x).includes(\u0027sub\u0027)).length).to.equal(9);\r",
                                                                                    "    points += 2;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "const admin = respJSON.filter((x) =\u003e x.role === \u0027admin\u0027)[0];\r",
                                                                                    "pm.test(\"sub value of admin in database matches sub in jwt (1 pts)\", function() {\r",
                                                                                    "    pm.expect(admin.sub).to.equal(pm.environment.get(\u0027admin1_sub\u0027));\r",
                                                                                    "    pm.environment.set(\"admin1_id\", admin.id);\r",
                                                                                    "    points += 2;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "const instructors = respJSON.filter((x) =\u003e x.role === \u0027instructor\u0027);\r",
                                                                                    "pm.test(\"sub values of instructors in database matches sub in jwts (1 pts)\", function() {\r",
                                                                                    "    pm.expect(instructors.length).to.equal(2);\r",
                                                                                    "    for(let i = 1; i \u003c= 2; i++){\r",
                                                                                    "        const instructor_i = instructors.filter(x =\u003e x.sub === pm.environment.get(\u0027instructor\u0027 + i + \u0027_sub\u0027))[0];\r",
                                                                                    "        pm.expect(instructor_i.sub).to.equal(pm.environment.get(\u0027instructor\u0027 + i + \u0027_sub\u0027));\r",
                                                                                    "        pm.environment.set(\u0027instructor\u0027 + i + \u0027_id\u0027, instructor_i.id);\r",
                                                                                    "    } \r",
                                                                                    "    points += 2;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "const students = respJSON.filter((x) =\u003e x.role === \u0027student\u0027);\r",
                                                                                    "pm.test(\"sub values of students in database matches sub in jwts (1 pts)\", function() {\r",
                                                                                    "    pm.expect(students.length).to.equal(6);\r",
                                                                                    "    for(let i = 1; i \u003c= 6; i++){\r",
                                                                                    "        const student_i = students.filter(x =\u003e x.sub === pm.environment.get(\u0027student\u0027 + i + \u0027_sub\u0027))[0];\r",
                                                                                    "        pm.expect(student_i.sub).to.equal(pm.environment.get(\u0027student\u0027 + i + \u0027_sub\u0027));\r",
                                                                                    "        pm.environment.set(\u0027student\u0027 + i + \u0027_id\u0027, student_i.id);\r",
                                                                                    "    }  \r",
                                                                                    "    points += 2;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* All Users Test 1 points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_all_users\", points);\r",
                                                                                    ""
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. all users 401 (0.5 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Unauthorized\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* All Users Test 2 points = \u0027 + points);\r",
                                                                                    "let points_all_users = pm.environment.get(\u0027points_all_users\u0027) + points;\r",
                                                                                    "console.log(\u0027******* All Users Tests Total points = \u0027 + points_all_users);\r",
                                                                                    "pm.environment.set(\"points_all_users\", points_all_users);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_password}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. all users 403 (0.5 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"You don\u0027t have permission on this resource\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* All Users Test 3 points = \u0027 + points);\r",
                                                                                    "let points_all_users = pm.environment.get(\u0027points_all_users\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027All Users Tests Total points = \u0027 + points_all_users);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_all_users\", points_all_users);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{instructor1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "3a get a user - basic (4 pts)",
                     "item":  [
                                  {
                                      "name":  "1. get admin1 200 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"admin user has either 3 or 4 properties (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json()\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.be.within(3,4);\r",
                                                                                    "    pm.expect(respJSON[\u0027id\u0027]).to.equal(pm.environment.get(\u0027admin1_id\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027sub\u0027]).to.equal(pm.environment.get(\u0027admin1_sub\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027role\u0027]).to.equal(\u0027admin\u0027);\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - basic Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Get a user - basic Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_user_basic\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{admin1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{admin1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. get instructor1 200 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"an instructor has either 4 or 5 properties (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json()\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.be.within(4,5)\r",
                                                                                    "    pm.expect(respJSON[\u0027id\u0027]).to.equal(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027sub\u0027]).to.equal(pm.environment.get(\u0027instructor1_sub\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027role\u0027]).to.equal(\u0027instructor\u0027);\r",
                                                                                    "    pm.expect(Object.keys(respJSON).includes(\u0027courses\u0027)).to.be.true;\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - basic Test 2 points = \u0027 + points);\r",
                                                                                    "let points_user_basic = pm.environment.get(\u0027points_user_basic\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Users - Basic Tests current points = \u0027 + points_user_basic);\r",
                                                                                    "pm.environment.set(\"points_user_basic\", points_user_basic);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{instructor1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{instructor1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{instructor1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. get student1 200 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"a student has either 4 or 5 properties (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json()\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.be.within(4,5);\r",
                                                                                    "    pm.expect(respJSON[\u0027id\u0027]).to.equal(pm.environment.get(\u0027student1_id\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027sub\u0027]).to.equal(pm.environment.get(\u0027student1_sub\u0027));\r",
                                                                                    "    pm.expect(respJSON[\u0027role\u0027]).to.equal(\u0027student\u0027);\r",
                                                                                    "    pm.expect(Object.keys(respJSON).includes(\u0027courses\u0027)).to.be.true;\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - basic Test 3 points = \u0027 + points);\r",
                                                                                    "let points_user_basic = pm.environment.get(\u0027points_user_basic\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Users - Basic Tests current points = \u0027 + points_user_basic);\r",
                                                                                    "pm.environment.set(\"points_user_basic\", points_user_basic);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. get a user 401 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Unauthorized\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - basic Test 4 points = \u0027 + points);\r",
                                                                                    "let points_user_basic = pm.environment.get(\u0027points_user_basic\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Users - Basic Tests current points = \u0027 + points_user_basic);\r",
                                                                                    "pm.environment.set(\"points_user_basic\", points_user_basic);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. get a user 403 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"You don\u0027t have permission on this resource\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - basic Test 4 points = \u0027 + points);\r",
                                                                                    "let points_user_basic = pm.environment.get(\u0027points_user_basic\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Users - Basic Tests Total points = \u0027 + points_user_basic);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_user_basic\", points_user_basic);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student2_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "3b, 4 create avatar (1 + 3 pts)",
                     "item":  [
                                  {
                                      "name":  "1. create/update avatar student_1 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"the response has the avatar_url (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027avatar_url\u0027]).to.equal(\r",
                                                                                    "        pm.environment.get(\u0027app_url\u0027) + \u0027/users/\u0027 + \r",
                                                                                    "        pm.environment.get(\u0027student1_id\u0027) + \u0027/avatar\u0027)\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Create Test 1 points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_avatar_create\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [
                                                                                    {
                                                                                        "key":  "file",
                                                                                        "type":  "file",
                                                                                        "src":  "D:\\tarpaulin-api\\test_files\\student1.png"
                                                                                    }
                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. student1 has avatar_url (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"student1 has an avatar URL (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();    \r",
                                                                                    "    pm.expect(respJSON[\u0027avatar_url\u0027]).to.equal(\r",
                                                                                    "        pm.environment.get(\u0027app_url\u0027) + \u0027/users/\u0027 + \r",
                                                                                    "        pm.environment.get(\u0027student1_id\u0027) + \u0027/avatar\u0027);\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - avatar url Test 2 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Get a user - avatar url Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_user_avatar_url\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. update avatar student_1 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"the response has the avatar_url (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027avatar_url\u0027]).to.equal(\r",
                                                                                    "        pm.environment.get(\u0027app_url\u0027) + \u0027/users/\u0027 + \r",
                                                                                    "        pm.environment.get(\u0027student1_id\u0027) + \u0027/avatar\u0027)\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Create Test 3 points = \u0027 + points);\r",
                                                                                    "let points_avatar_create = pm.environment.get(\u0027points_avatar_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Create Tests current points = \u0027 + points_avatar_create);\r",
                                                                                    "pm.environment.set(\"points_avatar_create\", points_avatar_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [
                                                                                    {
                                                                                        "key":  "file",
                                                                                        "type":  "file",
                                                                                        "src":  "D:\\tarpaulin-api\\test_files\\student1.png"
                                                                                    }
                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. post avatar 400 (0.25 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 status code (0.15 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(400);\r",
                                                                                    "    points += 0.15\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.10 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\"Error\"]).to.equal(\"The request body is invalid\")\r",
                                                                                    "    points += 0.10;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Create Test 4 points = \u0027 + points);\r",
                                                                                    "let points_avatar_create = pm.environment.get(\u0027points_avatar_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Create Tests current points = \u0027 + points_avatar_create);\r",
                                                                                    "pm.environment.set(\"points_avatar_create\", points_avatar_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [
                                                                                    {
                                                                                        "key":  "file_name",
                                                                                        "type":  "file",
                                                                                        "src":  "D:\\tarpaulin-api\\test_files\\student1.png"
                                                                                    }
                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. post avatar 401 (0.25 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.15 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.15\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.1 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\"Error\"]).to.equal(\"Unauthorized\")\r",
                                                                                    "    points += 0.1;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Create Test 5 points = \u0027 + points);\r",
                                                                                    "let points_avatar_create = pm.environment.get(\u0027points_avatar_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Create Tests current points = \u0027 + points_avatar_create);\r",
                                                                                    "pm.environment.set(\"points_avatar_create\", points_avatar_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [
                                                                                    {
                                                                                        "key":  "file",
                                                                                        "type":  "file",
                                                                                        "src":  "D:\\tarpaulin-api\\test_files\\student1.png"
                                                                                    }
                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "6. post avatar 403 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027Error\u0027]).to.equal(\"You don\u0027t have permission on this resource\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Create Test 6 points = \u0027 + points);\r",
                                                                                    "let points_avatar_create = pm.environment.get(\u0027points_avatar_create\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Avatar Create Tests Total points = \u0027 + points_avatar_create);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_avatar_create\", points_avatar_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [
                                                                                    {
                                                                                        "key":  "file",
                                                                                        "type":  "file",
                                                                                        "src":  "D:\\tarpaulin-api\\test_files\\student1.png"
                                                                                    }
                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "5. get user\u0027s avatar (1.75 + 2.25 pts)",
                     "item":  [
                                  {
                                      "name":  "1. get avatar 200 (0.25 + 2.25 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "// NOTE: The remaining 2.25 points will be based on verifying that the file was in the response\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Get Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Avatar Get Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_avatar_get\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. get avatar 401 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\"Error\"]).to.equal(\"Unauthorized\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Get Test 2 points = \u0027 + points);\r",
                                                                                    "let points_avatar_get = pm.environment.get(\u0027points_avatar_get\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Get Tests current points = \u0027 + points_avatar_get);\r",
                                                                                    "pm.environment.set(\"points_avatar_get\", points_avatar_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "protocolProfileBehavior":  {
                                                                      "disableBodyPruning":  true
                                                                  },
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [

                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. get avatar 403 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027Error\u0027]).to.equal(\"You don\u0027t have permission on this resource\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Get Test 3 points = \u0027 + points);\r",
                                                                                    "let points_avatar_get = pm.environment.get(\u0027points_avatar_get\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Get Tests current points = \u0027 + points_avatar_get);\r",
                                                                                    "pm.environment.set(\"points_avatar_get\", points_avatar_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "protocolProfileBehavior":  {
                                                                      "disableBodyPruning":  true
                                                                  },
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [

                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. get avatar 404 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"404 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(404);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027Error\u0027]).to.equal(\"Not found\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Get Test 4 points = \u0027 + points);\r",
                                                                                    "let points_avatar_get = pm.environment.get(\u0027points_avatar_get\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Avatar Get Tests Total points = \u0027 + points_avatar_get);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_avatar_get\", points_avatar_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "protocolProfileBehavior":  {
                                                                      "disableBodyPruning":  true
                                                                  },
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{instructor2_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [

                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{instructor2_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{instructor2_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "3b, 6 delete avatar (1 + 3 pts)",
                     "item":  [
                                  {
                                      "name":  "1. delete avatar 401 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\"Error\"]).to.equal(\"Unauthorized\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Delete Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Avatar Delete Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_avatar_delete\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "DELETE",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [

                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. delete avatar 204 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"204 status code (1 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(204);\r",
                                                                                    "    points += 1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Delete Test 2 points = \u0027 + points);\r",
                                                                                    "let points_avatar_delete = pm.environment.get(\u0027points_avatar_delete\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Delete Tests current points = \u0027 + points_avatar_delete);\r",
                                                                                    "pm.environment.set(\"points_avatar_delete\", points_avatar_delete);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "DELETE",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. student1 no avatar_url (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"student1 no longer has an avatar URL (0.75 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).includes(\u0027avatar_url\u0027)).to.be.false;\r",
                                                                                    "    points += 0.75;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a user - avatar url Test 2 points = \u0027 + points);\r",
                                                                                    "let points_user_avatar_url = pm.environment.get(\"points_user_avatar_url\") + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Get a user - avatar url Tests Total points = \u0027 + points_user_avatar_url);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_user_avatar_url\", points_user_avatar_url);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. delete avatar 403 (0.5 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.25 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027Error\u0027]).to.equal(\"You don\u0027t have permission on this resource\")\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Delete Test 4 points = \u0027 + points);\r",
                                                                                    "let points_avatar_delete = pm.environment.get(\u0027points_avatar_delete\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Avatar Delete Tests current points = \u0027 + points_avatar_delete);\r",
                                                                                    "pm.environment.set(\"points_avatar_delete\", points_avatar_delete);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "DELETE",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "formdata",
                                                                   "formdata":  [

                                                                                ]
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. delete avatar 404 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"404 status code (0.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(404);\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"error message is correct (0.5 pts)\", function(){\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(Object.keys(respJSON).length).to.equal(1);\r",
                                                                                    "    pm.expect(respJSON[\u0027Error\u0027]).to.equal(\"Not found\")\r",
                                                                                    "    points += 0.5;\r",
                                                                                    "})\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Avatar Delete Test 5 points = \u0027 + points);\r",
                                                                                    "let points_avatar_delete = pm.environment.get(\u0027points_avatar_delete\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Avatar Delete Tests Total points = \u0027 + points_avatar_delete);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_avatar_delete\", points_avatar_delete);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{student1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "DELETE",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/users/{{student1_id}}/avatar",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "users",
                                                                               "{{student1_id}}",
                                                                               "avatar"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "7. create a course (10 pts)",
                     "item":  [
                                  {
                                      "name":  "1. create 1st course (2 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.environment.set(\"course1_id\", pm.response.json()[\"id\"]);\r",
                                                                                    "\r",
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 201 (0.25 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(201);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (1.5 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"CS\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(493);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Cloud Application Development\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 1.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.25 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 493,\r\n  \"title\": \"Cloud Application Development\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. create course 400 missing prop (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 status code (0.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(400);\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"The request body is invalid\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The response content type is application.json (0.25 pts)\", function(){\r",
                                                                                    "    pm.expect(pm.response.contentInfo().contentType).to.eq(\u0027application/json\u0027);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 2 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 493,\r\n  \"title\": \"Cloud Application Development\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. create course 400 invalid instructor (2 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 status code (1.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(400);\r",
                                                                                    "    points += 1.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"400 error message (0.25 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"The request body is invalid\");\r",
                                                                                    "     points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The response content type is application.json (0.25 pts)\", function(){\r",
                                                                                    "    pm.expect(pm.response.contentInfo().contentType).to.eq(\u0027application/json\u0027);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 3 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 493,\r\n  \"title\": \"Cloud Application Development\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{student1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. create course 401 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 status code (0.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(401);\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"401 error message (0.5 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Unauthorized\");\r",
                                                                                    "     points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 4 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{invalid_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 493,\r\n  \"title\": \"Cloud Application Development\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. create course 403 (1 pt)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 status code (0.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(403);\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"403 error message (0.5 pts)\", function () {\r",
                                                                                    "     pm.expect(pm.response.json()[\"Error\"]).to.eq(\"You don\u0027t have permission on this resource\");\r",
                                                                                    "     points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 5 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{instructor1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 493,\r\n  \"title\": \"Cloud Application Development\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "6. create 2nd course (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.environment.set(\"course2_id\", pm.response.json()[\"id\"]);\r",
                                                                                    "\r",
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 201 (0.1 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(201);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.8 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"CS\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(492);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Mobile App Development\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 0.8\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.1 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 6 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);\r",
                                                                                    ""
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"CS\",\r\n  \"number\": 492,\r\n  \"title\": \"Mobile App Development\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "7. create 3rd course (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.environment.set(\"course3_id\", pm.response.json()[\"id\"]);\r",
                                                                                    "\r",
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 201 (0.1 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(201);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.8 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"ECE\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(271);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Digital Logic Design\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 0.8\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.1 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 7 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Create a course Tests current points = \u0027 + points_course_create);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);\r",
                                                                                    ""
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"ECE\",\r\n  \"number\": 271,\r\n  \"title\": \"Digital Logic Design\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{instructor1_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "8. create 4th course (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "pm.environment.set(\"course4_id\", pm.response.json()[\"id\"]);\r",
                                                                                    "\r",
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 201 (0.1 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(201);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.8 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"AI\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(534);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Machine Learning\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor2_id\u0027));\r",
                                                                                    "    points += 0.8\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.1 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.1\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Create a course Test 8 points = \u0027 + points);\r",
                                                                                    "let points_course_create = pm.environment.get(\u0027points_course_create\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Create a course Tests Total points = \u0027 + points_course_create);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_course_create\", points_course_create);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "auth":  {
                                                                   "type":  "bearer",
                                                                   "bearer":  [
                                                                                  {
                                                                                      "key":  "token",
                                                                                      "value":  "{{admin1_jwt}}",
                                                                                      "type":  "string"
                                                                                  }
                                                                              ]
                                                               },
                                                      "method":  "POST",
                                                      "header":  [

                                                                 ],
                                                      "body":  {
                                                                   "mode":  "raw",
                                                                   "raw":  "{\r\n  \"subject\": \"AI\",\r\n  \"number\": 534,\r\n  \"title\": \"Machine Learning\",\r\n  \"term\": \"fall-24\",\r\n  \"instructor_id\": {{instructor2_id}}\r\n}",
                                                                   "options":  {
                                                                                   "raw":  {
                                                                                               "language":  "json"
                                                                                           }
                                                                               }
                                                               },
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "8. get all courses (10 pts)",
                     "item":  [
                                  {
                                      "name":  "1. get courses page 1 (7.5 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The response content type is application.json\", function(){\r",
                                                                                    "    pm.expect(pm.response.contentInfo().contentType).to.eq(\u0027application/json\u0027);\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "const respJSON = pm.response.json();\r",
                                                                                    "\r",
                                                                                    "pm.test(\"Exactly 3 courses on the page\", function(){\r",
                                                                                    "   pm.expect(respJSON[\u0027courses\u0027].length).to.eq(3);\r",
                                                                                    "   points += 1;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"Every course has all the required properties\", function(){\r",
                                                                                    "    const courses = respJSON[\u0027courses\u0027];\r",
                                                                                    "    for (const course of courses){\r",
                                                                                    "        pm.expect(course).to.have.property(\"id\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"subject\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"number\");        \r",
                                                                                    "        pm.expect(course).to.have.property(\"title\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"term\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"instructor_id\");\r",
                                                                                    "        pm.expect(course[\"self\"]).to.eq(\r",
                                                                                    "            pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + course[\"id\"]);\r",
                                                                                    "    }\r",
                                                                                    "   points += 1;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The next link is correct\", function(){\r",
                                                                                    "    pm.expect(respJSON[\u0027next\u0027]).to.be.oneOf([\r",
                                                                                    "            pm.environment.get(\"app_url\") + \u0027/courses?offset=3\u0026limit=3\u0027,\r",
                                                                                    "            pm.environment.get(\"app_url\") + \u0027/courses?limit=3\u0026offset=3\u0027]);\r",
                                                                                    "    points += 2.5;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The courses are sorted by subject\", function(){\r",
                                                                                    "    const courses = respJSON[\u0027courses\u0027];\r",
                                                                                    "    const subjects = courses.map(x =\u003e x[\u0027subject\u0027]);\r",
                                                                                    "    console.log(subjects)\r",
                                                                                    "    let isSorted = true;\r",
                                                                                    "    for(let i = 0; i \u003c subjects.length -1; i++){\r",
                                                                                    "        if(subjects[i] \u003e subjects[i+1]){\r",
                                                                                    "            isSorted = false;\r",
                                                                                    "            break;\r",
                                                                                    "        }\r",
                                                                                    "    }\r",
                                                                                    "    pm.expect(isSorted).to.be.true;\r",
                                                                                    "    points += 2.5;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get all courses Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Get all courses Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_courses_get_all\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. get courses 2nd page (2.5 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0;\r",
                                                                                    "\r",
                                                                                    "pm.test(\"200 status code\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The response content type is application.json\", function(){\r",
                                                                                    "    pm.expect(pm.response.contentInfo().contentType).to.eq(\u0027application/json\u0027);\r",
                                                                                    "    points += 0.25;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"At least 1 course on the page\", function(){\r",
                                                                                    "   pm.expect(pm.response.json()[\u0027courses\u0027].length).to.be.at.least(1);\r",
                                                                                    "   points += 1;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"Every course has all the required properties\", function(){\r",
                                                                                    "    const courses = pm.response.json()[\u0027courses\u0027];\r",
                                                                                    "    for (const course of courses){\r",
                                                                                    "        pm.expect(course).to.have.property(\"id\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"subject\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"number\");        \r",
                                                                                    "        pm.expect(course).to.have.property(\"title\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"term\");\r",
                                                                                    "        pm.expect(course).to.have.property(\"instructor_id\");\r",
                                                                                    "        pm.expect(course[\"self\"]).to.eq(\r",
                                                                                    "            pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + course[\"id\"]);\r",
                                                                                    "    }\r",
                                                                                    "   points += 1;\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get all courses Test 2 points = \u0027 + points);\r",
                                                                                    "let points_courses_get_all = pm.environment.get(\u0027points_courses_get_all\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Get all courses Tests Total points = \u0027 + points_courses_get_all);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_courses_get_all\", points_courses_get_all);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses?offset=3\u0026limit=3",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses"
                                                                           ],
                                                                  "query":  [
                                                                                {
                                                                                    "key":  "offset",
                                                                                    "value":  "3"
                                                                                },
                                                                                {
                                                                                    "key":  "limit",
                                                                                    "value":  "3"
                                                                                }
                                                                            ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 },
                 {
                     "name":  "9. get a course (5 pts)",
                     "item":  [
                                  {
                                      "name":  "1. get course 1 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 200 (0.05 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(200);\r",
                                                                                    "    points += 0.05\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"CS\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(493);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Cloud Application Development\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.15 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.15\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"The response content type is application.json (0.05 pts)\", function(){\r",
                                                                                    "    pm.expect(pm.response.contentInfo().contentType).to.eq(\u0027application/json\u0027);\r",
                                                                                    "    points += 0.05\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a course Test 1 points = \u0027 + points);\r",
                                                                                    "console.log(\u0027******* Get a course Tests current points = \u0027 + points);\r",
                                                                                    "pm.environment.set(\"points_course_get\", points);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses/{{course1_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses",
                                                                               "{{course1_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "2. get course 2 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"CS\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(492);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Mobile App Development\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.25 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a course Test 4 points = \u0027 + points);\r",
                                                                                    "let points_course_get = pm.environment.get(\u0027points_course_get\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Get a course Tests current points = \u0027 + points_course_get);\r",
                                                                                    "pm.environment.set(\"points_course_get\", points_course_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses/{{course2_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses",
                                                                               "{{course2_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "3. get course 3 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"ECE\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(271);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Digital Logic Design\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor1_id\u0027));\r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.25 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a course Test 3 points = \u0027 + points);\r",
                                                                                    "let points_course_get = pm.environment.get(\u0027points_course_get\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Get a course Tests current points = \u0027 + points_course_get);\r",
                                                                                    "pm.environment.set(\"points_course_get\", points_course_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses/{{course3_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses",
                                                                               "{{course3_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "4. get course 4 200 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.75 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"subject\"]).to.eq(\"AI\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"number\"]).to.eq(534);\r",
                                                                                    "    pm.expect(pm.response.json()[\"title\"]).to.eq(\"Machine Learning\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"term\"]).to.eq(\"fall-24\");\r",
                                                                                    "    pm.expect(pm.response.json()[\"instructor_id\"]).to.eq(pm.environment.get(\u0027instructor2_id\u0027));\r",
                                                                                    "    points += 0.75\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"self URL is valid (0.25 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(respJSON[\"self\"]).to.eq(\r",
                                                                                    "        pm.environment.get(\"app_url\") + \u0027/courses/\u0027 + respJSON[\"id\"]);\r",
                                                                                    "    points += 0.25\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a course Test 4 points = \u0027 + points);\r",
                                                                                    "let points_course_get = pm.environment.get(\u0027points_course_get\u0027) + points;\r",
                                                                                    "console.log(\u0027******* Get a course Tests current points = \u0027 + points_course_get);\r",
                                                                                    "pm.environment.set(\"points_course_get\", points_course_get);"
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses/{{course4_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses",
                                                                               "{{course4_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  },
                                  {
                                      "name":  "5. get a course 404 (1 pts)",
                                      "event":  [
                                                    {
                                                        "listen":  "test",
                                                        "script":  {
                                                                       "exec":  [
                                                                                    "let points = 0; \r",
                                                                                    "\r",
                                                                                    "pm.test(\"status code is 404 (0.5 pts)\", function () {\r",
                                                                                    "    pm.response.to.have.status(404);\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "pm.test(\"content is valid (0.5 pts)\", function () {\r",
                                                                                    "    const respJSON = pm.response.json();\r",
                                                                                    "    pm.expect(pm.response.json()[\"Error\"]).to.eq(\"Not found\");\r",
                                                                                    "    points += 0.5\r",
                                                                                    "});\r",
                                                                                    "\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027******* Get a course Test 5 points = \u0027 + points);\r",
                                                                                    "let points_course_get = pm.environment.get(\u0027points_course_get\u0027) + points;\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u0027Get a course Tests Total points = \u0027 + points_course_get);\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "pm.environment.set(\"points_course_get\", points_course_get);\r",
                                                                                    "\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    "console.log(\u00271. user login          = \u0027 + pm.environment.get(\u0027points_login\u0027));\r",
                                                                                    "console.log(\u00272. all users           = \u0027 + pm.environment.get(\u0027points_all_users\u0027));\r",
                                                                                    "console.log(\u00273a get a user - basic  = \u0027 + pm.environment.get(\u0027points_user_basic\u0027));\r",
                                                                                    "console.log(\u00273b get a user - avurl  = \u0027 + pm.environment.get(\u0027points_user_avatar_url\u0027));\r",
                                                                                    "console.log(\u00274 create avatar        = \u0027 + pm.environment.get(\u0027points_avatar_create\u0027));\r",
                                                                                    "console.log(\u00275 get user\\\u0027s avatar   = \u0027 + pm.environment.get(\u0027points_avatar_get\u0027));\r",
                                                                                    "console.log(\u00276 delete avatar        = \u0027 + pm.environment.get(\u0027points_avatar_delete\u0027));\r",
                                                                                    "console.log(\u00277 create a course      = \u0027 + pm.environment.get(\u0027points_course_create\u0027));\r",
                                                                                    "console.log(\u00278 get courses          = \u0027 + pm.environment.get(\u0027points_courses_get_all\u0027));\r",
                                                                                    "console.log(\u00279 get a course         = \u0027 + pm.environment.get(\u0027points_course_get\u0027));\r",
                                                                                    "console.log(\u0027+++++++++++++++++++++++++++++++++++++++++\u0027);\r",
                                                                                    ""
                                                                                ],
                                                                       "type":  "text/javascript",
                                                                       "packages":  {

                                                                                    }
                                                                   }
                                                    }
                                                ],
                                      "request":  {
                                                      "method":  "GET",
                                                      "header":  [

                                                                 ],
                                                      "url":  {
                                                                  "raw":  "{{app_url}}/courses/{{invalid_course_id}}",
                                                                  "host":  [
                                                                               "{{app_url}}"
                                                                           ],
                                                                  "path":  [
                                                                               "courses",
                                                                               "{{invalid_course_id}}"
                                                                           ]
                                                              }
                                                  },
                                      "response":  [

                                                   ]
                                  }
                              ]
                 }
             ],
    "event":  [
                  {
                      "listen":  "prerequest",
                      "script":  {
                                     "type":  "text/javascript",
                                     "packages":  {

                                                  },
                                     "exec":  [
                                                  "Object.prototype.get_sub = (jwt) =\u003e JSON.parse((Buffer.from(jwt.split(\u0027.\u0027)[1], \u0027base64\u0027).toString(\u0027ascii\u0027))).sub;"
                                              ]
                                 }
                  },
                  {
                      "listen":  "test",
                      "script":  {
                                     "type":  "text/javascript",
                                     "packages":  {

                                                  },
                                     "exec":  [
                                                  ""
                                              ]
                                 }
                  }
              ]
}
